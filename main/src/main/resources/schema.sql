CREATE TABLE IF NOT EXISTS users
(
    user_id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email     VARCHAR(254) UNIQUE NOT NULL,
    user_name VARCHAR(250)        NOT NULL
);

CREATE TABLE IF NOT EXISTS categories
(
    category_id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS locations
(
    location_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat         FLOAT NOT NULL,
    lon         FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations
(
    compilation_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned         BOOLEAN     NOT NULL,
    title          VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS events
(
    event_id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation         VARCHAR(2000) NOT NULL,
    category_id        BIGINT        REFERENCES categories (category_id) ON DELETE SET NULL,
    confirmed_requests INT           NOT NULL,
    created_on         TIMESTAMP     NOT NULL,
    description        VARCHAR(7000) NOT NULL,
    event_date         TIMESTAMP     NOT NULL,
    initiator_id       BIGINT        REFERENCES users (user_id) ON DELETE SET NULL,
    location_id        BIGINT        REFERENCES locations (location_id) ON DELETE SET NULL,
    paid               BOOLEAN       NOT NULL,
    participant_limit  INT DEFAULT 0,
    published_on       TIMESTAMP     NOT NULL,
    request_moderation BOOLEAN       NOT NULL,
    state              VARCHAR(10)   NOT NULL,
    title              VARCHAR(120)  NOT NULL
);

CREATE TABLE IF NOT EXISTS requests
(
    request_id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created      TIMESTAMP  NOT NULL,
    event_id     BIGINT     NOT NULL REFERENCES events (event_id) ON DELETE CASCADE,
    requester_id BIGINT     NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    status       VARCHAR(9) NOT NULL,
    UNIQUE (event_id, requester_id)
);

CREATE TABLE IF NOT EXISTS compilation_event
(
    compilation_id BIGINT NOT NULL,
    event_id       BIGINT NOT NULL,
    PRIMARY KEY (compilation_id, event_id),
    FOREIGN KEY (compilation_id) REFERENCES compilations (compilation_id) ON DELETE CASCADE,
    FOREIGN KEY (event_id) REFERENCES events (event_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comments
(
    comment_id     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    commentator_id BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
    event_id       BIGINT REFERENCES events (event_id) ON DELETE CASCADE,
    text           VARCHAR(512) NOT NULL,
    created_on     TIMESTAMP    NOT NULL,
    last_update    TIMESTAMP DEFAULT NULL
);